service: workout-server

provider:
  name: aws
  runtime: nodejs12.x
  region: us-east-2
  environment:
    USER_TABLE: ${self:service}-${opt:stage, self:provider.stage}-user
    EXERCISE_TABLE: ${self:service}-${opt:stage, self:provider.stage}-exercise
    WORKOUT_TABLE: ${self:service}-${opt:stage, self:provider.stage}-workout
    USER_WORKOUT_TABLE: ${self:service}-${opt:stage, self:provider.stage}-user-workout
    WORKOUT_LOG_TABLE: ${self:service}-${opt:stage, self:provider.stage}-workout-log
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
        - dynamodb:BatchGetItem
      Resource: 'arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:service}-${opt:stage, self:provider.stage}-*'

functions:
  saveUser:
    handler: src/user_handlers.saveUser
    events:
      - http:
          path: saveUser
          method: post
          cors: true
  getUser:
    handler: src/user_handlers.getUser
    events:
      - http:
          path: getUser
          method: post
          cors: true
  saveExercise:
    handler: src/exercise_handlers.saveExercise
    events:
      - http:
          path: saveExercise
          method: post
          cors: true
  getExercises:
    handler: src/exercise_handlers.getExercises
    events:
      - http:
          path: getExercises
          method: post
          cosrs: true
  getAllExercises:
    handler: src/exercise_handlers.getAllExercises
    events:
      - http:
          path: getAllExercises
          method: get
          cors: true
  saveWorkout:
    handler: src/workout_handlers.saveWorkout
    events:
      - http:
          path: saveWorkout
          method: post
          cors: true
  getWorkouts:
    handler: src/workout_handlers.getWorkouts
    events:
      - http:
          path: getWorkouts
          method: post
          cors: true
  getWorkoutsForUser:
    handler: src/workout_handlers.getWorkoutsForUser
    events:
      - http:
          path: getWorkoutsForUser
          method: post
          cors: true
  saveCompletedWorkout:
    handler: src/workoutLog_handlers.saveCompletedWorkout
    events:
      - http:
          path: saveCompletedWorkout
          method: post
          cors: true
  getWorkoutLogForUser:
    handler: src/workoutLog_handlers.getWorkoutLogForUser
    events:
      - http:
          path: getWorkoutLogForUser
          method: post
          cors: true

resources:
  Resources:
    UserTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 25
          WriteCapacityUnits: 25
        TableName: ${self:provider.environment.USER_TABLE}

    ExerciseTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 25
          WriteCapacityUnits: 25
        TableName: ${self:provider.environment.EXERCISE_TABLE}

    WorkoutTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 25
          WriteCapacityUnits: 25
        TableName: ${self:provider.environment.WORKOUT_TABLE}

    UserWorkoutTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          - AttributeName: userId
            AttributeType: S
        KeySchema:
          - AttributeName: userId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 25
          WriteCapacityUnits: 25
        TableName: ${self:provider.environment.USER_WORKOUT_TABLE}

    WorkoutLogTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          - AttributeName: userId
            AttributeType: S
          - AttributeName: wlId
            AttributeType: S
        KeySchema:
          - AttributeName: userId
            KeyType: HASH
          - AttributeName: wlId
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 25
          WriteCapacityUnits: 25
        TableName: ${self:provider.environment.WORKOUT_LOG_TABLE}

plugins:
  - serverless-plugin-typescript
